/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lib.Book;
import lib.Copy;
import lib.Magazine;
import lib.Publication;

/**
 *
 * @author BISHNU
 */
public class AddCopyPublication extends javax.swing.JPanel {

    private static AddCopyPublication instance = null;

    public static AddCopyPublication getInstance() {

        return instance;
    }

    /**
     * Creates new form AddCopyPublication
     */
    public AddCopyPublication() {
        instance = this;
        initComponents();
        showAllControls(true);
        jLabel3.setVisible(false);
        issueNoTF.setVisible(false);

    }

    public void addValueToCompontents() {

        String typePub = typeComboBox.getSelectedItem().toString();

        if (typePub.equalsIgnoreCase("Book")) {

            List<Book> bookList = LibrarySystemApplication.getInstance().getPubBookList();

            for (Book bk : bookList) {

                titleComboBox.addItem(bk.getTitle());

            }

        } else if (typePub.equalsIgnoreCase("Magazine")) {
            List<Magazine> magazineList = LibrarySystemApplication.getInstance().getPubMagazineList();

            for (Magazine magazine : magazineList) {

                titleComboBox.addItem(magazine.getTitle());

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        addCopyPublicationBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        copyNoTF = new javax.swing.JTextField();
        typeComboBox = new javax.swing.JComboBox();
        titleComboBox = new javax.swing.JComboBox();
        issueNoTF = new javax.swing.JComboBox();
        isbnTF = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookCopyTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        magCopyListTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jLabel1.setText("Title");

        jLabel2.setText("Choose Type");

        jLabel3.setText("IssueNo");

        jLabel4.setText("ISBN");

        addCopyPublicationBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        addCopyPublicationBtn.setForeground(new java.awt.Color(0, 0, 153));
        addCopyPublicationBtn.setText("Add Copy");
        addCopyPublicationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCopyPublicationBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("CopyNo");

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Book", "Magazine" }));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });

        titleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleComboBoxActionPerformed(evt);
            }
        });

        bookCopyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Title", "ISBN", "Copies"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(bookCopyTable);

        magCopyListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mag Title", "Issue No", "Copies"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(magCopyListTable);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("Books");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setText("Magazines");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typeComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(copyNoTF)
                            .addComponent(titleComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(issueNoTF, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(isbnTF, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addCopyPublicationBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(issueNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(isbnTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copyNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addCopyPublicationBtn)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addCopyPublicationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCopyPublicationBtnActionPerformed
        // TODO add your handling code here:

        String typePub = typeComboBox.getSelectedItem().toString();

        String pubTitle = titleComboBox.getSelectedItem().toString();

        if (typePub.equalsIgnoreCase("Book")) {
            String isbn = isbnTF.getSelectedItem().toString();
            String copyNo = copyNoTF.getText();

            Copy c = new Copy(copyNo, "Available");
            //Publication pubBook = new Book(pubTitle, isbn);
            Book pubBook = LibrarySystemApplication.getInstance().searchBook(pubTitle);
            c.setPublication(pubBook);
            pubBook.addCopy(c);
            LibrarySystemApplication.getInstance().getCopyBookList().add(c);
            DefaultTableModel modelBook = (DefaultTableModel) bookCopyTable.getModel();
            if (modelBook.getRowCount() > 0) {
                for (int i = modelBook.getRowCount() - 1; i > -1; i--) {
                    if(bookCopyTable.getValueAt(i, 0).toString().equals(pubTitle)){
                        modelBook.removeRow(i);
                    }
                }
            }
            modelBook.addRow(new Object[]{pubTitle, isbn,showCopies(pubBook.getCopy())});
            JOptionPane.showMessageDialog(null, "Successfully Book Copy Added");
//            issueNoTF.removeAllItems();
//            isbnTF.removeAllItems();
            titleComboBox.requestFocus();
            copyNoTF.setText("");
        } else if (typePub.equalsIgnoreCase("Magazine")) {

            String issueNo = issueNoTF.getSelectedItem().toString();
            String copyNo = copyNoTF.getText();
            Copy c = new Copy(copyNo, "Available");
            //Publication pubMagazine = new Magazine(pubTitle, issueNo);
            Magazine pubMagazine = LibrarySystemApplication.getInstance().searchMagazine(pubTitle);
            c.setPublication(pubMagazine);
            pubMagazine.addCopy(c);
            LibrarySystemApplication.getInstance().getCopyMagazineList().add(c);
            DefaultTableModel modelMag = (DefaultTableModel) magCopyListTable.getModel();
            if (modelMag.getRowCount() > 0) {
                for (int i = modelMag.getRowCount() - 1; i > -1; i--) {
                    if(magCopyListTable.getValueAt(i, 0).toString().equals(pubTitle)){
                        modelMag.removeRow(i);
                    }
                }
            }
            modelMag.addRow(new Object[]{pubTitle, issueNo,showCopies(pubMagazine.getCopy())});
            
//            issueNoTF.removeAllItems();
//            isbnTF.removeAllItems();
            titleComboBox.requestFocus();
            copyNoTF.setText("");            
            JOptionPane.showMessageDialog(null, "Successfully Magazine Copy Added");

        }


    }//GEN-LAST:event_addCopyPublicationBtnActionPerformed
    public static String showCopies(List<Copy> copies){
        String names="";
        for(Copy cp:copies){
            names+=cp.getCopyNo()+", ";
        }
        return names;
    }
    
    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        // TODO add your handling code here:

        String selectedItem = typeComboBox.getSelectedItem().toString();

        if (selectedItem.equalsIgnoreCase("Magazine")) {
            showAllControls(false);
            jLabel3.setVisible(true);
            issueNoTF.setVisible(true);

            titleComboBox.removeAllItems();

            List<Magazine> magazineList = LibrarySystemApplication.getInstance().getPubMagazineList();

            for (Magazine magazine : magazineList) {

                titleComboBox.addItem(magazine.getTitle());

            }

        } else if (selectedItem.equalsIgnoreCase("Book")) {
            showAllControls(true);
            jLabel3.setVisible(false);
            issueNoTF.setVisible(false);

            titleComboBox.removeAllItems();

            List<Book> bookList = LibrarySystemApplication.getInstance().getPubBookList();

            for (Book bk : bookList) {

                titleComboBox.addItem(bk.getTitle());

            }
        }


    }//GEN-LAST:event_typeComboBoxActionPerformed

    private void titleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleComboBoxActionPerformed
        // TODO add your handling code here:

        String selectedItem = null;
        try {
            selectedItem = titleComboBox.getSelectedItem().toString();

        } catch (Exception e) {
        }
        

        String selectedTypePub = typeComboBox.getSelectedItem().toString();

        if (selectedItem != null) {

            if (selectedTypePub.equalsIgnoreCase("Book")) {
                isbnTF.removeAllItems();
                List<Book> pubBookList = LibrarySystemApplication.getInstance().getPubBookList();

                for (Book bk : pubBookList) {
                    if (selectedItem.equalsIgnoreCase(bk.getTitle())) {
                        isbnTF.addItem(bk.getISBN());
                    }
                }

            } else if (selectedTypePub.equalsIgnoreCase("Magazine")) {
                issueNoTF.removeAllItems();
                List<Magazine> pubMagazineList = LibrarySystemApplication.getInstance().getPubMagazineList();
                for (Magazine mag : pubMagazineList) {
                    if (selectedItem.equalsIgnoreCase(mag.getTitle())) {
                        issueNoTF.addItem(mag.getIssueNo());
                    }
                }
            }

        }


    }//GEN-LAST:event_titleComboBoxActionPerformed

    //For Show or hide all Controls
    private void showAllControls(boolean status) {
        jLabel3.setVisible(status);
        jLabel4.setVisible(status);

        issueNoTF.setVisible(status);
        isbnTF.setVisible(status);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCopyPublicationBtn;
    private javax.swing.JTable bookCopyTable;
    private javax.swing.JTextField copyNoTF;
    private javax.swing.JComboBox isbnTF;
    private javax.swing.JComboBox issueNoTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable magCopyListTable;
    private javax.swing.JComboBox titleComboBox;
    private javax.swing.JComboBox typeComboBox;
    // End of variables declaration//GEN-END:variables
}
